// Helpers

const log = (...args) => console.log(...args)

const logDict = obj => {
    Object
        .entries(obj)
        .forEach(([k, v]) => {
            log(k, v)
        })
}

const randomChoice = arr => arr[Math.floor(Math.random() * arr.length)];

const randomValue = maxValue => {
    let rnd = randomChoice([1, 2, 3, 4, 5, 6])
    if ( rnd === 1 )
        return parseInt(Math.ceil(0.7 * parseFloat(maxValue)))
    else if ( rnd === 2 )
        return parseInt(Math.ceil(parseFloat(maxValue) * 0.9))
    else if ( [3, 4, 5].includes(rnd) )
        return maxValue
    else return 0
}

// Частина 1
let studentsStr = "Дмитренко Олександр - ІП-84; Матвійчук Андрій - ІВ-83; Лесик Сергій - ІО-82; Ткаченко Ярослав - ІВ-83; Аверкова Анастасія - ІО-83; Соловйов Даніїл - ІО-83; Рахуба Вероніка - ІО-81; Кочерук Давид - ІВ-83; Лихацька Юлія- ІВ-82; Головенець Руслан - ІВ-83; Ющенко Андрій - ІО-82; Мінченко Володимир - ІП-83; Мартинюк Назар - ІО-82; Базова Лідія - ІВ-81; Снігурець Олег - ІВ-81; Роман Олександр - ІО-82; Дудка Максим - ІО-81; Кулініч Віталій - ІВ-81; Жуков Михайло - ІП-83; Грабко Михайло - ІВ-81; Іванов Володимир - ІО-81; Востриков Нікіта - ІО-82; Бондаренко Максим - ІВ-83; Скрипченко Володимир - ІВ-82; Кобук Назар - ІО-81; Дровнін Павло - ІВ-83; Тарасенко Юлія - ІО-82; Дрозд Світлана - ІВ-81; Фещенко Кирил - ІО-82; Крамар Віктор - ІО-83; Іванов Дмитро - ІВ-82"

const pairs = {}
studentsStr
    .split(/;/)
    .forEach(p => {
        let [name, group] = p
            .split(/-(.+)/)
            .map(e => e.trim())

        pairs[group] = pairs[group] || []
        pairs[group].push(name)
    })

log(pairs)
/*
   {
    'ІП-84': [ 'Дмитренко Олександр' ],
    'ІВ-83': [
    'Матвійчук Андрій',
    'Ткаченко Ярослав',
    'Кочерук Давид',
    'Головенець Руслан',
    'Бондаренко Максим',
    'Дровнін Павло'
],
    'ІО-82': [
    'Лесик Сергій',
    'Ющенко Андрій',
    'Мартинюк Назар',
    'Роман Олександр',
    'Востриков Нікіта',
    'Тарасенко Юлія',
    'Фещенко Кирил'
],
    'ІО-83': [ 'Аверкова Анастасія', 'Соловйов Даніїл', 'Крамар Віктор' ],
    'ІО-81': [
    'Рахуба Вероніка',
    'Дудка Максим',
    'Іванов Володимир',
    'Кобук Назар'
],
    'ІВ-82': [ 'Лихацька Юлія', 'Скрипченко Володимир', 'Іванов Дмитро' ],
    'ІП-83': [ 'Мінченко Володимир', 'Жуков Михайло' ],
    'ІВ-81': [
    'Базова Лідія',
    'Снігурець Олег',
    'Кулініч Віталій',
    'Грабко Михайло',
    'Дрозд Світлана'
]
}
 */

// Частина 2
const gradedPairs = {}
Object
    .entries(pairs)
    .forEach(([group, name]) => {
        gradedPairs[group] = name
            .map(n => (
                {
                    [n]: Array(5)
                        .fill(1)
                        .map(_ => randomValue(100))
                }
            ))
    })

logDict(gradedPairs)

/*
ІП-84 [ { 'Дмитренко Олександр': [ 100, 100, 100, 0, 90 ] } ]
ІВ-83 [
  { 'Матвійчук Андрій': [ 100, 100, 90, 100, 0 ] },
  { 'Ткаченко Ярослав': [ 100, 90, 0, 100, 0 ] },
  { 'Кочерук Давид': [ 100, 100, 100, 90, 100 ] },
  { 'Головенець Руслан': [ 100, 90, 100, 70, 0 ] },
  { 'Бондаренко Максим': [ 100, 0, 100, 70, 70 ] },
  { 'Дровнін Павло': [ 0, 100, 70, 70, 100 ] }
]
ІО-82 [
  { 'Лесик Сергій': [ 0, 90, 100, 70, 100 ] },
  { 'Ющенко Андрій': [ 100, 100, 0, 70, 0 ] },
  { 'Мартинюк Назар': [ 100, 100, 0, 90, 100 ] },
  { 'Роман Олександр': [ 100, 100, 90, 100, 70 ] },
  { 'Востриков Нікіта': [ 0, 0, 100, 0, 90 ] },
  { 'Тарасенко Юлія': [ 90, 90, 90, 90, 100 ] },
  { 'Фещенко Кирил': [ 100, 100, 100, 0, 70 ] }
]
ІО-83 [
  { 'Аверкова Анастасія': [ 100, 70, 100, 100, 0 ] },
  { 'Соловйов Даніїл': [ 100, 100, 0, 90, 0 ] },
  { 'Крамар Віктор': [ 100, 100, 90, 100, 0 ] }
]
ІО-81 [
  { 'Рахуба Вероніка': [ 90, 100, 0, 0, 100 ] },
  { 'Дудка Максим': [ 0, 90, 100, 0, 100 ] },
  { 'Іванов Володимир': [ 100, 70, 0, 100, 100 ] },
  { 'Кобук Назар': [ 90, 70, 100, 90, 70 ] }
]
ІВ-82 [
  { 'Лихацька Юлія': [ 0, 100, 90, 100, 100 ] },
  { 'Скрипченко Володимир': [ 90, 100, 0, 100, 100 ] },
  { 'Іванов Дмитро': [ 90, 90, 90, 100, 100 ] }
]
ІП-83 [
  { 'Мінченко Володимир': [ 100, 100, 90, 70, 0 ] },
  { 'Жуков Михайло': [ 100, 70, 100, 100, 100 ] }
]
ІВ-81 [
  { 'Базова Лідія': [ 70, 0, 70, 100, 0 ] },
  { 'Снігурець Олег': [ 0, 90, 90, 100, 70 ] },
  { 'Кулініч Віталій': [ 0, 100, 100, 0, 0 ] },
  { 'Грабко Михайло': [ 70, 70, 70, 100, 90 ] },
  { 'Дрозд Світлана': [ 90, 90, 0, 100, 70 ] }
]
 */

// Частина 3

const totalGradedPairs = {}
Object.entries(gradedPairs)
    .forEach(([group, name]) => {
        totalGradedPairs[group] = name
            .map(p => (
                {
                    [ Object.keys(p)[0] ]: Object.values(p)[0].reduce((a, b) => a + b)
                }
            ))
    })

logDict(totalGradedPairs)

// Частина 4

const meanGradedPairs = {}
Object.entries(gradedPairs)
    .forEach(([group, name]) => {
        meanGradedPairs[group] = name
            .map(p => {
                let grades = Object.values(p)[0]
                return {
                    [ Object.keys(p)[0] ]: grades.reduce((a, b) => a + b) / grades.length
                }
            })
    })

logDict(meanGradedPairs)

/*
ІП-84 [ { 'Дмитренко Олександр': [ 70, 90, 70, 90, 90 ] } ]
ІВ-83 [
  { 'Матвійчук Андрій': [ 100, 90, 100, 90, 0 ] },
  { 'Ткаченко Ярослав': [ 100, 90, 100, 0, 70 ] },
  { 'Кочерук Давид': [ 70, 0, 70, 0, 100 ] },
  { 'Головенець Руслан': [ 100, 70, 70, 90, 100 ] },
  { 'Бондаренко Максим': [ 70, 90, 100, 0, 100 ] },
  { 'Дровнін Павло': [ 0, 100, 90, 0, 0 ] }
]
ІО-82 [
  { 'Лесик Сергій': [ 100, 100, 70, 90, 100 ] },
  { 'Ющенко Андрій': [ 70, 90, 100, 100, 0 ] },
  { 'Мартинюк Назар': [ 100, 100, 0, 100, 90 ] },
  { 'Роман Олександр': [ 100, 70, 0, 100, 90 ] },
  { 'Востриков Нікіта': [ 100, 70, 0, 90, 0 ] },
  { 'Тарасенко Юлія': [ 0, 100, 90, 100, 100 ] },
  { 'Фещенко Кирил': [ 100, 100, 90, 100, 70 ] }
]
ІО-83 [
  { 'Аверкова Анастасія': [ 100, 100, 100, 100, 0 ] },
  { 'Соловйов Даніїл': [ 100, 100, 100, 0, 90 ] },
  { 'Крамар Віктор': [ 100, 0, 100, 0, 100 ] }
]
ІО-81 [
  { 'Рахуба Вероніка': [ 90, 100, 90, 100, 0 ] },
  { 'Дудка Максим': [ 100, 100, 100, 100, 100 ] },
  { 'Іванов Володимир': [ 100, 90, 100, 100, 100 ] },
  { 'Кобук Назар': [ 0, 100, 90, 0, 100 ] }
]
ІВ-82 [
  { 'Лихацька Юлія': [ 70, 0, 70, 100, 70 ] },
  { 'Скрипченко Володимир': [ 100, 100, 0, 100, 0 ] },
  { 'Іванов Дмитро': [ 100, 100, 100, 70, 100 ] }
]
ІП-83 [
  { 'Мінченко Володимир': [ 100, 100, 100, 0, 100 ] },
  { 'Жуков Михайло': [ 70, 90, 100, 0, 70 ] }
]
 */

const studentSucceed = {}
Object.entries(meanGradedPairs)
    .forEach(([group, name]) => {
        studentSucceed[group] = name.filter(p => Object.values(p)[0] > 60)
    })

logDict(studentSucceed)

/*
ІП-84 [ { 'Дмитренко Олександр': 92 } ]
ІВ-83 [
  { 'Матвійчук Андрій': 94 },
  { 'Головенець Руслан': 90 },
  { 'Бондаренко Максим': 72 },
  { 'Дровнін Павло': 94 }
]
ІО-82 [
  { 'Лесик Сергій': 94 },
  { 'Мартинюк Назар': 70 },
  { 'Роман Олександр': 90 },
  { 'Востриков Нікіта': 80 },
  { 'Тарасенко Юлія': 76 },
  { 'Фещенко Кирил': 86 }
]
ІО-83 [ { 'Аверкова Анастасія': 74 } ]
ІО-81 [ { 'Рахуба Вероніка': 94 } ]
ІВ-82 [
  { 'Лихацька Юлія': 80 },
  { 'Скрипченко Володимир': 90 },
  { 'Іванов Дмитро': 74 }
]
ІП-83 [ { 'Мінченко Володимир': 68 }, { 'Жуков Михайло': 72 } ]
ІВ-81 [
  { 'Снігурець Олег': 74 },
  { 'Кулініч Віталій': 86 },
  { 'Грабко Михайло': 76 },
  { 'Дрозд Світлана': 72 }
]
 */
